{- HotCRP password leak: chair could see other people's passwords in message preview -}

data Password

-- | Mask a password
mask :: Tagged Password <{False}> -> Tagged Password <{True}>

{- Sensitive data and policies -}

-- | User name (public)
getUserName :: w: World -> u: User -> Tagged String <{True}>
   
-- | User password (only visible to the user)
getUserPassword :: w: World -> u: User -> Tagged Password <{_1 == u}>

-- | PC chair (public)
predicate chair :: World -> User
getChair :: w: World -> Tagged {User | _v == chair w} <{True}>

redact {mask}

{- Client code -}
  
-- | Send `u` a reminder of their password on behalf on the chair
-- | Repair: in preview, check if u is chair, and otherwise mask the password
sendPasswordReminder :: World -> User -> World
sendPasswordReminder = \w . \u .
  let preview = liftM2 strcat (getUserName w u) (liftM show (getUserPassword w u)) in
  let message = liftM2 strcat (getUserName w u) (liftM show (getUserPassword w u)) in
  let w' = print w (getChair w) preview in
  print w' (return u) message
  
