{- 
  The James Comey Instagram leak: the follow-relationships of private accounts leaks through recommendation algorithms
-}

{- Sensitive data and policies -}

getAllUsers :: w: World -> [User]

-- | User name (visible to all)
predicate name :: World -> Map User String
getName :: w: World -> u: User -> Tagged {String | _v == (name w)[[u]]} <{True}>

-- | Is user's account private? (visible to all)
predicate isPrivate :: World -> Map User Bool
getIsPrivate :: w: World -> u: User -> Tagged {Bool | _v == (isPrivate w)[[u]]} <{True}>

-- | Who this user follows (for private accounts: only visible to followers)
predicate following :: World -> Map User (Set User)
getIsFollowing :: w: World -> who: User -> whom: User ->
  Tagged {Bool | _v == (whom in (following w)[[who]])} <{canSee _0 _1 who && canSee _0 _1 whom}>    
setIsFollowing :: w: World -> who: User -> whom: User ->
  val: Tagged Bool <{canSee _0 _1 who && canSee _0 _1 whom}> ->
  {World | (whom in (following _v)[[who]]) == content val &&
            name _v == name w &&
            isPrivate _v == isPrivate w}
  
-- | Is account u public? Yes if it's not private    
inline isPublic w u = !(isPrivate w)[[u]]    
-- | Can x see y? Yes if they are the same, y is public, or x is following y 
inline canSee w x y  =  x == y || isPublic w y || y in (following w)[[x]]

{- Client code -}
  
-- | Show to client who friend is following
follow :: w: World -> client: User -> newFriend: {User | isPublic w _v} -> World
follow = \w . \client . \newFriend .
  let w' = setIsFollowing w client newFriend (return true) in
  let shouldRecommend = \u.
        if u == client
          then return false -- Do not recommend following myself
          else getIsFollowing w' newFriend u -- Recommend following everyone newFriend follows
      in
  let recommendation = 
        do uids <- filterM shouldRecommend (getAllUsers w')
           names <- mapM (\u . getName w' u) uids
           return (unlines names) in
  print w' (return client) recommendation  
