showMyAcceptedPapers :: arg1:World -> arg0:User -> World
showMyAcceptedPapers = \w .
  \client . 
    let isMyAccepted = \p . do
                              auts <- getPaperAuthors w p
                              st <- do
                                      g0 <- downgrade (do
                                                         x5 <- getPhase w
                                                         return (eq Done x5))
                                      
                                      if g0
                                        then getPaperStatus w p
                                        else return NoDecision
                              return ((elem client auts) &&
                                        (st == Accepted)) in
    
    let out = do
                allPaperIDs <- getAllPaperIds w
                paperIDs <- filterM isMyAccepted
                              allPaperIDs
                titles <- mapM (\p .
                              getPaperTitle w p) paperIDs
                return (unlines titles) in
    print w (return client) out

(Goals: 1)
(Measures: 4)
(Policy size: fromList [("../Prelude.sq",46),("../Tagged.sq",110),("06-Search.sq",32)])
Goal                  &     Templ  &  Solution  &   Time: Typecheck  &     Repair  &    Recheck  &  Total Synth  \\
showMyAcceptedPapers  &        82  &       107  &             0.03s  &      0.08s  &      0.00s  &        0.12s  \\
Totals                &        82  &       107  &             0.03s  &      0.08s  &      0.00s  &        0.12s  \\
