{- TaggedIO -}

data TaggedIO a <visibleTo :: User -> Bool>

returnIO :: x:a -> TaggedIO {a | _v == x} <{False}>

bindIO :: <p :: User -> Bool> .
    TaggedIO a <p> ->
    (a -> TaggedIO b <p>) ->
    TaggedIO b <p>

bind2 :: <p :: User -> Bool> .
    x : Tagged a <p> ->
    ({a | _v == content x} -> TaggedIO b <p>) ->
    TaggedIO (Tagged b <p>) <p>

ifIO :: <b :: Bool> . <t :: User -> Bool> . <bc :: User -> Bool> .
    cond: Tagged {Bool | (_v ==> b)} <bc> ->
    TaggedIO (Tagged a <bc>) <{t _0 && b && bc _0}> ->
    TaggedIO (Tagged a <bc>) <{t _0 && bc _0}> ->
    TaggedIO (Tagged a <bc>) <t>

ifIO_ :: <b :: Bool> . <t :: User -> Bool> . <bc :: User -> Bool> .
    cond: Tagged {Bool | (_v ==> b)} <bc> ->
    TaggedIO a <{t _0 && b && bc _0}> ->
    TaggedIO a2 <{t _0 && bc _0}> ->
    TaggedIO Unit <t>
ifIO_ = \cond . \a . \b .
    bindIO (
      ifIO cond
        (bindIO a (\blah . returnIO (return Unit)))
        (bindIO b (\blah . returnIO (return Unit)))
    ) (\blah . returnIO (return Unit))

{-
ifIO :: <b :: Bool> . <t :: User -> Bool> .
    cond: Tagged {Bool | (_v == b)} <{b && t _0}> ->
    TaggedIO a <{t _0 && b}> ->
    TaggedIO a <{t _0 && !b}> ->
    TaggedIO a <t>
-}

-- gets the 'disjunctive right-hand-side' error
{-
ifIO :: <b :: Bool> . <t :: User -> Bool> . <notb :: Bool> .
    cond: Tagged {Bool | (_v ==> b) && ((!_v) ==> notb)} <{b && t _0}> ->
    TaggedIO a <{t _0 && b}> ->
    TaggedIO a <{t _0 && notb}> ->
    TaggedIO a <t>
-}

-- what I want the sound version to look like

{-
ifIO :: <b :: Bool> . <t :: User -> Bool> . <r :: User -> Bool>
    cond: Tagged {Bool | (_v == b)} <{b && t _0}> ->
    TaggedIO (Tagged a <{b && r _0}>) <{t _0 && b}> ->
    TaggedIO (Tagged a <r>) <{t _0 && !b}> ->
    TaggedIO (Tagged a <r>) <t>
-}


print :: <pp :: User -> Bool> .
    Tagged {User | pp _v} <pp> ->
    Tagged String <pp> ->
    TaggedIO Unit <pp>
