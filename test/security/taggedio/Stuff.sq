data RecordId
data Record

getSessionUser :: TaggedIO User <{True}>

predicate record :: RecordId -> Record
getRecord :: rid:RecordId -> TaggedIO (Tagged {Record | _v == record rid} <{_0 == author (record rid)}>) <{True}>

predicate author :: Record -> User
getAuthor :: r:Record -> Tagged {User | _v == author r} <{True}>

showRecordByIdView :: rid:RecordId -> TaggedIO Unit <{True}>
showRecordByIdView = \rid .
  bindIO (getSessionUser) (\u .
  bindIO (getRecord rid) (\record .
  let author {- Tagged User -} = bind record (\r . getAuthor r) in
  let isOk {- Tagged Bool -} = bind author (\a . return (u == a)) in
  ifIO isOk
    (print (return u) (bind record (\r . return (show r))))
    (returnIO Unit)
  ))
