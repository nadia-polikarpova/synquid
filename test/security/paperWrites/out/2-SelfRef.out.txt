showPaper :: w:World -> pid:PaperId -> World
showPaper = \w . \pid . 
    let u = getSessionUser w in
    
    let title = getPaperTitle w pid
      in
    
    let authors = liftM show (bind
                                (downgrade (bind (getChair w)
                                              (\x7 . bind u (\x6 . return (eq
                                                                             x7
                                                                             x6)))))
                                (\g0 . bind (downgrade (bind u
                                                          (\x14 . bind
                                                                    (getPaperAuthors
                                                                       w pid)
                                                                    (\x13 .
                                                                      return
                                                                        (elem
                                                                           x14
                                                                           x13)))))
                                         (\g1 . 
                                           if g0 || g1
                                             then getPaperAuthors w pid
                                             else return Nil))) in
    
    let out = liftM2 strcat title
                authors in
    print w u out

(Goals: 1)
(Measures: 4)
(Policy size: fromList [("2-SelfRef.sq",32),("Prelude.sq",46),("Tagged.sq",123)])
Goal                  &     Templ  &  Solution  &   Time: Typecheck  &     Repair  &    Recheck  &  Total Synth  \\
showPaper             &        37  &        98  &             0.01s  &      0.12s  &      0.10s  &        0.24s  \\
Totals                &        37  &        98  &             0.01s  &      0.12s  &      0.10s  &        0.24s  \\
