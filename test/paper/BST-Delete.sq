qualifier {x <= y, x != y}

data BST a where
	Empty :: BST a
	Node  :: x: a -> l: BST {a | _v < x} -> r: BST {a | x < _v} -> BST a
                          
termination measure size :: BST a -> {Int | _v >= 0} where
  Empty -> 0
  Node x l r -> size l + size r + 1
  
measure telems :: BST a -> Set a where
  Empty -> []
  Node x l r -> telems l + telems r + [x]

mergePivot :: p: a -> t1: BST {a | _v < p} -> t2: BST {a | _v > p} -> {BST a | telems _v == telems t1 + telems t2}
mergePivot = ??

delete :: t: BST a -> x: a -> {BST a | telems _v == telems t - [x]}
delete = ??