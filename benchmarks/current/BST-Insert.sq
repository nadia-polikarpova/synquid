qualifier {x <= y, x != y}

data BST a where
	Empty :: BST a
	Node  :: x: a -> l: BST {a | _v < x} -> r: BST {a | x < _v} -> BST a
                          
termination measure size :: BST a -> {Int | _v >= 0} where
  Empty -> 0
  Node x l r -> size l + size r + 1
  
measure keys :: BST a -> Set a where
  Empty -> []
  Node x l r -> keys l + keys r + [x]
	
insert :: x: a -> t: BST a -> {BST a | keys _v == keys t + [x]}
insert = ??