data PList a <p :: a -> a -> Bool> where
	Nil :: PList a <p>
	Cons :: x: a -> xs: PList {a | p x _v} <p> -> PList a <p>
  
termination measure len :: PList a -> {Int | _v >= 0} where
  Nil -> 0
  Cons x xs -> 1 + len xs  

measure elems :: PList a -> Set a where
  Nil -> []
  Cons x xs -> [x] + elems xs

type UList a = PList a <{_0 != _1}>

qualifier {x == y, x != y}

param2elems :: <q :: a -> Bool> . <p :: a -> a -> Bool> . x: a -> xs: PList {a | q _v && _v != x} <p> -> {PList {a | q _v} <p> | !(x in elems _v) && elems _v == elems xs && len _v == len xs}  
param2elems = ??
	
delete :: x: a -> xs: UList a -> {UList {a | _v != x} | elems _v == elems xs - [x]}
delete = ??

	
