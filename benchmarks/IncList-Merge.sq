qualifier {x < y}

measure ilen :: IList a -> Int
measure ielems :: IList a -> Set a

data IList a decreases ilen where
	INil :: {IList a | ilen _v == 0 && ielems _v == []}
	ICons :: x: a -> xs: IList {a | x <= _v} -> {IList a | ilen _v > 0 && ilen _v == ilen xs + 1 && ielems _v == ielems xs + [x]}
	
merge :: xs: IList a -> ys: IList a -> {IList a | ilen _v == ilen xs + ilen ys && ielems _v == ielems xs + ielems ys}
merge = ??

	
